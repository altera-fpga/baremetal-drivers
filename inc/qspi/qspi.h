#ifndef QSPI_H__
#define QSPI_H__

#include <stddef.h>
#include <stdint.h>

typedef enum {
    IOCTL_QSPI_REGS_READ,
    IOCTL_QSPI_REGS_WRITE,
    IOCTL_QSPI_CFG_SET,
    IOCTL_QSPI_CFG_GET,
    IOCTL_QSPI_CFG_BAUD_RATE_DIV_SET,
    IOCTL_QSPI_CFG_BAUD_RATE_DIV_GET,
    IOCTL_QSPI_CFG_ENABLE_SET,
    IOCTL_QSPI_CFG_ENABLE_GET,
    IOCTL_QSPI_CFG_CLKPOL_SET,
    IOCTL_QSPI_CFG_CLKPOL_GET,
    IOCTL_QSPI_CFG_CLKPHASE_SET,
    IOCTL_QSPI_CFG_CLKPHASE_GET,
    IOCTL_QSPI_CFG_CS_DECODE_SET,
    IOCTL_QSPI_CFG_CS_DECODE_GET,
    IOCTL_QSPI_CFG_CS_SET,
    IOCTL_QSPI_CFG_CS_GET,
    IOCTL_QSPI_CFG_WRITE_PROTECT_PIN_SET,
    IOCTL_QSPI_CFG_WRITE_PROTECT_PIN_GET,
    IOCTL_QSPI_READ_PARAMS_SET,
    IOCTL_QSPI_READ_PARAMS_GET,
    IOCTL_QSPI_WRITE_PARAMS_SET,
    IOCTL_QSPI_WRITE_PARAMS_GET,
    IOCTL_QSPI_CS_DELAYS_SET,
    IOCTL_QSPI_CS_DELAYS_GET,
    IOCTL_QSPI_READ_DATA_CAPTURE_DLY_SET,
    IOCTL_QSPI_READ_DATA_CAPTURE_DLY_GET,
    IOCTL_QSPI_DEVICE_SIZE_PARAMS_SET,
    IOCTL_QSPI_DEVICE_SIZE_PARAMS_GET,
    IOCTL_QSPI_INDIRECT_ADDR_SPAN_SET,
    IOCTL_QSPI_INDIRECT_ADDR_SPAN_GET,
    IOCTL_QSPI_INDIRECT_BASE_ADDR_SET,
    IOCTL_QSPI_INDIRECT_BASE_ADDR_GET,
    IOCTL_QSPI_DMA_CFG_SET,
    IOCTL_QSPI_DMA_CFG_GET,
    IOCTL_QSPI_REMAP_ADDR_SET,
    IOCTL_QSPI_REMAP_ADDR_GET,
    IOCTL_QSPI_MODE_BITS_SET,
    IOCTL_QSPI_MODE_BITS_GET,
    IOCTL_QSPI_SRAM_FILL_LEVEL_GET,
    IOCTL_QSPI_TX_THRESHOLD_SET,
    IOCTL_QSPI_TX_THRESHOLD_GET,
    IOCTL_QSPI_RX_THRESHOLD_SET,
    IOCTL_QSPI_RX_THRESHOLD_GET,
    IOCTL_QSPI_IRQ_STAT_GET,
    IOCTL_QSPI_IRQ_STAT_SET,
    IOCTL_QSPI_IRQ_MASK_GET,
    IOCTL_QSPI_IRQ_MASK_SET,
    IOCTL_QSPI_WRPROT_SET,
    IOCTL_QSPI_WRPROT_GET,
    IOCTL_QSPI_WRPROT_LOW_SET,
    IOCTL_QSPI_WRPROT_LOW_GET,
    IOCTL_QSPI_WRPROT_HI_SET,
    IOCTL_QSPI_WRPROT_HI_GET,
    IOCTL_QSPI_IND_RD_SET,
    IOCTL_QSPI_IND_RD_GET,
    IOCTL_QSPI_IND_RD_WATERMARK_SET,
    IOCTL_QSPI_IND_RD_WATERMARK_GET,
    IOCTL_QSPI_IND_RD_START_ADDR_SET,
    IOCTL_QSPI_IND_RD_START_ADDR_GET,
    IOCTL_QSPI_IND_RD_COUNT_SET,
    IOCTL_QSPI_IND_RD_COUNT_GET,
    IOCTL_QSPI_IND_WR_SET,
    IOCTL_QSPI_IND_WR_GET,
    IOCTL_QSPI_IND_WR_WATERMARK_SET,
    IOCTL_QSPI_IND_WR_WATERMARK_GET,
    IOCTL_QSPI_IND_WR_START_ADDR_SET,
    IOCTL_QSPI_IND_WR_START_ADDR_GET,
    IOCTL_QSPI_IND_WR_COUNT_SET,
    IOCTL_QSPI_IND_WR_COUNT_GET,
    IOCTL_QSPI_FLASH_CMD_SET,
    IOCTL_QSPI_FLASH_CMD_GET,
    IOCTL_QSPI_FLASH_CMD_ADDR_SET,
    IOCTL_QSPI_FLASH_CMD_ADDR_GET,
    IOCTL_QSPI_FLASH_CMD_READ_DATA_GET,
    IOCTL_QSPI_FLASH_CMD_WRITE_DATA_SET,
    IOCTL_QSPI_FLASH_CMD_WRITE_DATA_GET,
    IOCTL_QSPI_MODULE_ID_GET,

    // adding new elements before this line
    IOCTL_QSPI_END
} qspi_ioctl_t;

int32_t qspi_open(const char *path, int32_t flags);
int32_t qspi_close(int32_t fd);
size_t qspi_read(int32_t fd, uintptr_t buf, size_t size);
size_t qspi_recv(int32_t fd, uintptr_t buf, size_t size, int32_t flags);
size_t qspi_write(int32_t fd, uintptr_t buf, size_t size);
size_t qspi_send(int32_t fd, uintptr_t buf, size_t size, int32_t flags);
int32_t qspi_ioctl(int32_t fd, int32_t operation, uintptr_t arg, size_t length);
int32_t qspi_error(int32_t fd);

#endif // QSPI_H