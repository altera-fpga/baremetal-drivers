#ifndef RSTMGR_H
#define RSTMGR_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stddef.h>
#include <stdint.h>

typedef enum {
    IOCTL_RSTMGR_READ,
    IOCTL_RSTMGR_WRITE,
    IOCTL_RSTMGR_GET_STAT,
    IOCTL_RSTMGR_SET_STAT,
    IOCTL_RSTMGR_GET_MISCSTAT,
    IOCTL_RSTMGR_SET_MISCSTAT,
    IOCTL_RSTMGR_GET_HDSKEN,
    IOCTL_RSTMGR_SET_HDSKEN,
    IOCTL_RSTMGR_GET_HDSKREQ,
    IOCTL_RSTMGR_SET_HDSKREQ,
    IOCTL_RSTMGR_SET_HDSKACK,
    IOCTL_RSTMGR_GET_HDSKACK,
    IOCTL_RSTMGR_SET_HDSKSTALL,
    IOCTL_RSTMGR_GET_HDSKSTALL,
    IOCTL_RSTMGR_GET_PER0MODRST,
    IOCTL_RSTMGR_SET_PER0MODRST,
    IOCTL_RSTMGR_GET_PER1MODRST,
    IOCTL_RSTMGR_SET_PER1MODRST,
    IOCTL_RSTMGR_GET_BRGMODRST,
    IOCTL_RSTMGR_SET_BRGMODRST,
    IOCTL_RSTMGR_GET_DBGMODRST,
    IOCTL_RSTMGR_SET_DBGMODRST,
    IOCTL_RSTMGR_GET_BRGWARMMASK,
    IOCTL_RSTMGR_SET_BRGWARMMASK,
    IOCTL_RSTMGR_GET_TSTSTA,
    IOCTL_RSTMGR_GET_HDSKTIMEOUT,
    IOCTL_RSTMGR_SET_HDSKTIMEOUT,
    IOCTL_RSTMGR_GET_DBGHDSKTIMEOUT,
    IOCTL_RSTMGR_SET_DBGHDSKTIMEOUT,
    IOCTL_RSTMGR_GET_DBGRSTCMPLT,
    IOCTL_RSTMGR_SET_DBGRSTCMPLT,
    IOCTL_RSTMGR_GET_HPSRSTCMPLT,
    IOCTL_RSTMGR_SET_HPSRSTCMPLT,
    IOCTL_RSTMGR_GET_CPUINRESET,
    IOCTL_RSTMGR_GET_CPURSTRELEASE,
    IOCTL_RSTMGR_SET_CPURSTRELEASE,
    IOCTL_RSTMGR_GET_CPU0_RESET_BASE_LOW,
    IOCTL_RSTMGR_SET_CPU0_RESET_BASE_LOW,
    IOCTL_RSTMGR_GET_CPU0_RESET_BASE_HIGH,
    IOCTL_RSTMGR_SET_CPU0_RESET_BASE_HIGH,
    IOCTL_RSTMGR_GET_CPU1_RESET_BASE_LOW,
    IOCTL_RSTMGR_SET_CPU1_RESET_BASE_LOW,
    IOCTL_RSTMGR_GET_CPU1_RESET_BASE_HIGH,
    IOCTL_RSTMGR_SET_CPU1_RESET_BASE_HIGH,
    IOCTL_RSTMGR_GET_CPU2_RESET_BASE_LOW,
    IOCTL_RSTMGR_SET_CPU2_RESET_BASE_LOW,
    IOCTL_RSTMGR_GET_CPU2_RESET_BASE_HIGH,
    IOCTL_RSTMGR_SET_CPU2_RESET_BASE_HIGH,
    IOCTL_RSTMGR_GET_CPU3_RESET_BASE_LOW,
    IOCTL_RSTMGR_SET_CPU3_RESET_BASE_LOW,
    IOCTL_RSTMGR_END
} rstmgr_ioctl_op_t;

int32_t rstmgr_open(const char *name, int32_t flags);
int32_t rstmgr_close(int32_t fd);
size_t rstmgr_recv(int32_t fd, uintptr_t buf, size_t size, int32_t flags);
size_t rstmgr_read(int32_t fd, uintptr_t buf, size_t size);
size_t rstmgr_send(int32_t fd, const uintptr_t buf, size_t size, int32_t flags);
size_t rstmgr_write(int32_t fd, const uintptr_t buf, size_t size);
int32_t rstmgr_ioctl(int32_t fd, int32_t request, uintptr_t arg, size_t length);
int32_t rstmgr_error(int32_t fd);

#ifdef __cplusplus
}
#endif // __cplusplus

#endif // RSTMGR_H
