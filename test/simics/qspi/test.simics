add-directory "%script%"

$hps_reset_vector = 0x0
$fsbl_elf_filename = "build/aarch64/out/qspi_test_ocram.elf"
$fsbl_image_filename = "build/aarch64/out/qspi_test_ocram.bin"

output-radix base = 16


run-command-file (sim->workspace + "/targets/sm-hps/agilex5e-universal.simics")

enable-debugger
add-symbol-file $fsbl_elf_filename

$bp_ID = (bp.memory.break -x (dbg0.sym-address "exit"))

echo "setting up coverage"

$coverage_object = (collect-coverage context-query="/system/'board.fpga.soc_inst.hps_subsys.agilex_hps.core[0]'" name=mycov)

echo "starting test"

write-device-reg "system.board.fpga.soc_inst.hps_subsys.sdm.sdm_mailbox.bank.regs.CMDND_BUFFER[0]" 0xb1000032
write-device-reg "system.board.fpga.soc_inst.hps_subsys.sdm.sdm_mailbox.bank.regs.CIN" 1
write-device-reg "system.board.fpga.soc_inst.hps_subsys.sdm.sdm_mailbox.bank.regs.DOORBELL_TO_SDM" 1

write-device-reg "system.board.fpga.soc_inst.hps_subsys.sdm.sdm_mailbox.bank.regs.CMDND_BUFFER[1]" 0xb100003B
write-device-reg "system.board.fpga.soc_inst.hps_subsys.sdm.sdm_mailbox.bank.regs.CIN" 2
write-device-reg "system.board.fpga.soc_inst.hps_subsys.sdm.sdm_mailbox.bank.regs.DOORBELL_TO_SDM" 1

script-branch {
    echo "Waiting for the test to complete"
    run
    bp.wait-for-breakpoint $bp_ID
    stop
    echo "Reached exit"

    $test_result_value = ($system.board.fpga.soc_inst.hps_subsys.agilex_hps.core[0].read-reg X0)
    if(sim->batch_mode == TRUE) {
        mycov.add-functions
        mycov.disassemble
        mycov.add-source-info
        mycov.lcov-output output="%script%/coverage.lcov"
        run 1 s
        exit $test_result_value
    } else {
        echo -n "Test return value: "
        echo $test_result_value
    }
}
